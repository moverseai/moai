# @package _global_

selected_cam: '25'

model:
  monads:
    smplx:
      pca_components: 12
      use_translation: false
      use_pose: false
      use_face: false
      use_hands: false
      use_betas: false
      use_global_orientation: false
      use_eyes: false
      use_hands_pca: false
      flat_hand_mean: false
      use_face_contour: false
      joints_format: null # openpose_coco25_face
      gender: neutral
      model_path: ${SMPLX_ROOT}/models_smplx_v1_1/models/smplx
      num_betas: 10
    ##################### START REDNER
    # convert:
    #   from_to: aa_mat    
    # mesh_silhouette:
    #   resolution: [300, 400] # [1200, 1600]
    #   near_clip: 0.001
    #   samples: 4
    #   sample_pixel_center: true
    #   focal_length: [1498.22426237, 1498.22426237]
    #   principal_point: [790.263706, 578.90334]
    #   opengl: true
    # rotation3d:
    #   rotations: [180@y, 180@z]
    ##################### STOP REDNER
    ##################### START NVDIFFRAST
    opengl:
      focal_length: [1498.22426237, 1498.22426237]
      principal_point: [790.263706, 578.90334]
      width: 2448 # 400 # 2448 # 1600
      height: 2048 # 300 # 2048 # 1200
      rotation: null
      translation: null
      persistent: true
    mesh_silhouette:      
      width: 2448 # 400 # 2448 # 1600
      height: 2048 # 300 # 2048 # 1200
      position_gradient_scale: 1.0
    transform:
      xyz_in_at: row
      xyz_out_at: row
      transpose: false
    rotation3d:
      rotations: [180@y, 180@z]
      # rotations: [180@y, 180@z]
    ##################### STOP NVDIFFRAST
    # ##################### START PYTORCH3D
    # mesh_silhouette:      
    #   focal_length: [1498.22426237, 1498.22426237]
    #   principal_point: [790.263706, 578.90334]
    #   width: 400
    #   height: 300
    #   z_reflection: true
    #   faces_per_pixel: 10
    #   blend_sigma: 1e-4
    #   blend_gamma: 1e-4
    #   raster_bin_size: null
    #   raster_blur_radius: 1e-4
    # rotation3d:
    #   rotations: [180@x, 180@y]
    # ##################### STOP PYTORCH3D
    bilinear_sampling:
      width: 400
      height: 300
    # nearest_sampling:
    #   width: 400
    #   height: 300

  feedforward:
    preprocess:
      smplx:
        shape: [smplx.params.betas]
        pose: [smplx.params.body_pose]
        rotation: [smplx.params.global_orient]
        translation: [smplx.params.transl]
        left_hand: [smplx.params.left_hand_pose]
        right_hand: [smplx.params.right_hand_pose]
        expression: [smplx.params.expression]
        jaw: [smplx.params.jaw_pose]
        left_eye: [smplx.params.leye_pose]
        right_eye: [smplx.params.reye_pose]
        out: [body]
      multiply:
        x: [body.vertices]
        y: [smplx.scale]
        out: [vertices]
      bilinear_sampling:
        image: 
          - images.${selected_cam}
        out: 
          - image_${selected_cam}_down2
      ##################### START REDNER
      # convert:
      #   rotation: [camera_rotation]
      #   out: [camera_rotation_3x3]
      # mesh_silhouette:
      #   vertices: [vertices]
      #   indices: [faces]
      #   camera_translation: [null]
      #   image: [color]
      #   out: [silhouette]
      ##################### STOP REDNER
      ##################### START NVDIFFRAST
      inverse:
        x: 
          - cameras.${selected_cam}.c2w
        out: [w2c]
      rotation3d:
        # tensor: [vertices] 
        tensor: [smplx.mesh.scaled_vertices]
        out: [rotation]
      # rotate:
      #   rotation: [rotation]
      #   # points: [vertices]        
      #   points: [smplx.mesh.scaled_vertices]
      #   out: [transformed_vertices]
      transform:
        transform: [w2c]
        points: [smplx.mesh.scaled_vertices]
        # points: [smplx.mesh.vertices]
        # points: [body.vertices]
        # points: [transformed_vertices]
        # points: [vertices]
        out: [transformed_vertices]      
      rotate:
        rotation: [rotation]
        points: [transformed_vertices] # [mesh.scaled_vertices]
        # out: [rotated_vertices]
        out: [transformed_vertices]
      distort3d:
        # points: [body.vertices]
        points: [transformed_vertices]
        # points: [rotated_vertices]
        # points: [vertices]
        coefficients:
          - cameras.${selected_cam}.D
        # out: [transformed_vertices]
        out: [distorted_vertices]
      opengl:
        points: [distorted_vertices]
        # translation: [cameras.01.c2w_T]
        # rotation: [cameras.01.c2w_R]
        # image: [color]
        # nominal_image: [color]
        nominal_image:
          - images.${selected_cam}
        intrinsics: 
          - cameras.${selected_cam}.K
        out: [ndc_vertices]
      mesh_silhouette:
        ndc_vertices: [ndc_vertices]
        indices: [smplx.mesh.faces]
        out: [silhouette]
      ##################### STOP NVDIFFRAST
      ##################### START PYTORCH3D
      # rotation3d:
      #   tensor: [vertices]
      #   out: [rotation]
      # rotate:
      #   rotation: [rotation]
      #   points: [vertices]
      #   out: [rotated_vertices]
      # mesh_silhouette:
      #   vertices: [rotated_vertices]
      #   faces: [faces]
      #   translation: [null] # is already translated in camera space
      #   rotation: [null]
      #   nominal_image: [color]
      #   out: [silhouette]
      ##################### STOP PYTORCH3D